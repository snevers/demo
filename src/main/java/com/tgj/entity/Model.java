package com.tgj.entity;
// default package
// Generated 2018-5-22 14:40:26 by Hibernate Tools 5.2.10.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Model generated by hbm2java
 */
@JsonIgnoreProperties(value = {"functions", "handler", "hibernateLazyInitializer"})
@Entity
@Table(name = "d_model", catalog = "rykj", uniqueConstraints = @UniqueConstraint(columnNames = "d_no"))
public class Model implements java.io.Serializable {

	private static final long serialVersionUID = -4100074281761965416L;
	private Integer id;
	private String no;
	private String name;
	private String description;
	private Classify classify;
	private Set<Function> functions = new HashSet<>();

	public Model() {
	}

	public Model(String no, String name) {
		this.no = no;
		this.name = name;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "d_id", unique = true, nullable = false, updatable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "d_no", unique = true, nullable = false, length = 4)
	public String getNo() {
		return this.no;
	}

	public void setNo(String no) {
		this.no = no;
	}

	@Column(name = "d_name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "d_description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	public Classify getClassify() {
		return this.classify;
	}

	public void setClassify(Classify classify) {
		this.classify = classify;
	}

	@Override
	public String toString() {
		return "Model [id=" + id + ", no=" + no + ", name=" + name + ", description=" + description + "]";
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "model")
	public Set<Function> getFunctions() {
		return functions;
	}

	public void setFunctions(Set<Function> functions) {
		this.functions = functions;
	}
	

}
