package com.tgj.entity;
// default package
// Generated 2018-5-22 14:40:26 by Hibernate Tools 5.2.10.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Project generated by hbm2java
 */
@JsonIgnoreProperties(value = {"classifys", "handler", "hibernateLazyInitializer"})
@Entity
@Table(name = "d_project", catalog = "rykj", uniqueConstraints = @UniqueConstraint(columnNames = "d_no"))
public class Project implements java.io.Serializable {

	private static final long serialVersionUID = 1877934753811114199L;
	private Integer id;
	private String no;
	private String name;
	private String description;
	private Set<Classify> classifys = new HashSet<>();
	

	public Project() {
	}

	public Project(String no, String name) {
		this.no = no;
		this.name = name;
	}

	public Project(String no, String name, String description) {
		this.no = no;
		this.name = name;
		this.description = description;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "d_id", unique = true, nullable = false, updatable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "d_no", unique = true, nullable = false, length = 4)
	public String getNo() {
		return this.no;
	}

	public void setNo(String no) {
		this.no = no;
	}

	@Column(name = "d_name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "d_description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Override
	public String toString() {
		return "Project [id=" + id + ", no=" + no + ", name=" + name + ", description=" + description + "]";
	}

	@OneToMany(mappedBy = "project", fetch = FetchType.LAZY)
	public Set<Classify> getClassifys() {
		return classifys;
	}

	public void setClassifys(Set<Classify> classifys) {
		this.classifys = classifys;
	}
	
	

}
